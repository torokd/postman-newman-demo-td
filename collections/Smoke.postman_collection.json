{
	"info": {
		"_postman_id": "4b1b468b-6892-4517-a4b9-3fb8bae1d28e",
		"name": "Smoke",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18990643",
		"_collection_link": "https://postman-demo-td.postman.co/workspace/postman_demo_td~f40b4c32-ea51-4ccd-8987-1d10d27ef52b/collection/18990643-4b1b468b-6892-4517-a4b9-3fb8bae1d28e?action=share&source=collection_link&creator=18990643"
	},
	"item": [
		{
			"name": "Auth v1",
			"item": [
				{
					"name": "Get access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Response content parsing and setting collection variables",
									"const responseContent = pm.response.json();",
									"let accessToken = responseContent.accessToken;",
									"let refreshToken = responseContent.refreshToken;",
									"pm.collectionVariables.set(\"accessToken\", accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"",
									"pm.test(\"Response contains expected properties\", function () {",
									"    pm.expect(responseContent).to.be.an('object');",
									"    pm.expect(responseContent).to.have.all.keys('accessToken', 'refreshToken', 'id', 'username', 'email', 'firstName', 'lastName', 'gender', 'image');",
									"});",
									"",
									"pm.test(\"Response property type and business logic check\", function () {",
									"    pm.expect(responseContent.accessToken).to.be.a('string');",
									"    pm.expect(responseContent.refreshToken).to.be.a('string');",
									"    pm.expect(responseContent.id).to.be.a('number');",
									"    pm.expect(responseContent.username).to.be.a('string');",
									"    pm.expect(responseContent.email).to.be.a('string');",
									"    pm.expect(responseContent.firstName).to.be.a('string');",
									"    pm.expect(responseContent.lastName).to.be.a('string');",
									"    pm.expect(responseContent.gender).to.be.a('string');",
									"    pm.expect(responseContent.image).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"emilys\",\n  \"password\": \"emilyspass\",\n  \"expiresInMins\": 30\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "## Login Endpoint\n\nThis endpoint allows users to authenticate and obtain a session by providing their credentials. Upon successful authentication, the user will receive a session token that can be used for subsequent requests.\n\n### Request\n\n**Method:** POST  \n**URL:** `{{baseURL}}/auth/login`\n\n#### Request Body\n\nThe request body must be in JSON format and contain the following parameters:\n\n- **username** (string): The username of the user attempting to log in.\n    \n- **password** (string): The password associated with the provided username.\n    \n- **expiresInMins** (integer): The duration in minutes for which the session should remain valid.\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"username\": \"your_username\",\n  \"password\": \"your_password\",\n  \"expiresInMins\": 30\n}\n\n ```\n\n### Response\n\nUpon a successful login, the response will typically include a session token and may contain additional user information. The expected response structure is as follows:\n\n- **token** (string): The session token to be used for authenticated requests.\n    \n- **expiresAt** (string): The timestamp indicating when the session will expire.\n    \n\n### Notes\n\n- Ensure that the username and password are correctly entered to avoid authentication failures.\n    \n- The `expiresInMins` parameter allows users to specify how long they wish their session to be valid. If not specified, a default value may be applied by the server.\n    \n- Handle the session token securely and avoid exposing it in public areas.\n    \n\nThis endpoint is crucial for user authentication and should be used with caution to protect user credentials."
					},
					"response": []
				},
				{
					"name": "Get all profile data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"pm.test(\"Response contains expected properties\", function () {",
									"    pm.expect(responseContent).to.be.an('object').that.is.not.undefined;",
									"    pm.expect(responseContent).to.have.all.keys(",
									"        'id', 'firstName', 'lastName', 'maidenName', 'age', 'gender', ",
									"        'email', 'phone', 'username', 'password', 'birthDate', 'image', ",
									"        'bloodGroup', 'height', 'weight', 'eyeColor', 'hair', 'ip', ",
									"        'address', 'macAddress', 'university', 'bank', 'company', ",
									"        'ein', 'ssn', 'userAgent', 'crypto', 'role'",
									"    );",
									"    pm.expect(responseContent).to.have.property('crypto').that.is.an('object').that.has.all.keys(",
									"        'coin', 'wallet', 'network'",
									"    );",
									"    pm.expect(responseContent).to.have.property('address').that.is.an('object').that.has.all.keys(",
									"        'address', 'city', 'state', 'stateCode', 'postalCode', 'coordinates', 'country'",
									"    );",
									"    pm.expect(responseContent.address.coordinates).to.be.an('object').that.has.all.keys(",
									"        'lat', 'lng'",
									"    );",
									"});",
									"",
									"//pm.test(\"Response property type and business logic check\", function () {",
									"//});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/auth/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Assert the overall structure of the response",
									"pm.test(\"Response contains expected properties\", function () {",
									"    //TODO",
									"});",
									"",
									"pm.test(\"Response property type and business logic check\", function () {",
									"    //TODO",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\",\n  \"expiresInMins\": 30\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/refresh",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products v1",
			"item": [
				{
					"name": "Get specific product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"const expectedSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"description\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"price\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"discountPercentage\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"rating\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"stock\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"tags\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"brand\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"sku\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"weight\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"dimensions\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"width\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"height\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"depth\": {",
									"                    \"type\": \"number\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"width\",",
									"                \"height\",",
									"                \"depth\"",
									"            ],",
									"            \"additionalProperties\": false",
									"        },",
									"        \"warrantyInformation\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"shippingInformation\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"availabilityStatus\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"reviews\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"rating\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"comment\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"date\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"reviewerName\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"reviewerEmail\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                },",
									"                \"required\": [",
									"                    \"rating\",",
									"                    \"comment\",",
									"                    \"date\",",
									"                    \"reviewerName\",",
									"                    \"reviewerEmail\"",
									"                ],",
									"                \"additionalProperties\": false",
									"            }",
									"        },",
									"        \"returnPolicy\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"minimumOrderQuantity\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"createdAt\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"barcode\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"qrCode\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"createdAt\",",
									"                \"updatedAt\",",
									"                \"barcode\",",
									"                \"qrCode\"",
									"            ],",
									"            \"additionalProperties\": false",
									"        },",
									"        \"images\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"thumbnail\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [",
									"        \"id\",",
									"        \"title\",",
									"        \"description\",",
									"        \"category\",",
									"        \"price\",",
									"        \"discountPercentage\",",
									"        \"rating\",",
									"        \"stock\",",
									"        \"tags\",",
									"        \"sku\",",
									"        \"weight\",",
									"        \"dimensions\",",
									"        \"warrantyInformation\",",
									"        \"shippingInformation\",",
									"        \"availabilityStatus\",",
									"        \"reviews\",",
									"        \"returnPolicy\",",
									"        \"minimumOrderQuantity\",",
									"        \"meta\",",
									"        \"images\",",
									"        \"thumbnail\"",
									"    ],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.test(\"Validate JSON response by schema\", () => {",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"",
									"    const Ajv = require('ajv');",
									"    const ajv = new Ajv();",
									"    const validate = ajv.compile(expectedSchema);",
									"    const valid = validate(responseContent);",
									"    pm.expect(valid, ajv.errorsText(validate.errors)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/products/{{randomisedProductId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"{{randomisedProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"const expectedSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"products\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"description\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"category\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"price\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"discountPercentage\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"rating\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"stock\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"tags\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {",
									"                            \"type\": \"string\"",
									"                        }",
									"                    },",
									"                    \"brand\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"sku\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"weight\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"dimensions\": {",
									"                        \"type\": \"object\",",
									"                        \"properties\": {",
									"                            \"width\": {",
									"                                \"type\": \"number\"",
									"                            },",
									"                            \"height\": {",
									"                                \"type\": \"number\"",
									"                            },",
									"                            \"depth\": {",
									"                                \"type\": \"number\"",
									"                            }",
									"                        },",
									"                        \"required\": [",
									"                            \"width\",",
									"                            \"height\",",
									"                            \"depth\"",
									"                        ],",
									"                        \"additionalProperties\": false",
									"                    },",
									"                    \"warrantyInformation\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"shippingInformation\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"availabilityStatus\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"reviews\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"rating\": {",
									"                                    \"type\": \"number\"",
									"                                },",
									"                                \"comment\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"date\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"reviewerName\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"reviewerEmail\": {",
									"                                    \"type\": \"string\"",
									"                                }",
									"                            },",
									"                            \"required\": [",
									"                                \"rating\",",
									"                                \"comment\",",
									"                                \"date\",",
									"                                \"reviewerName\",",
									"                                \"reviewerEmail\"",
									"                            ],",
									"                            \"additionalProperties\": false",
									"                        }",
									"                    },",
									"                    \"returnPolicy\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"minimumOrderQuantity\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"meta\": {",
									"                        \"type\": \"object\",",
									"                        \"properties\": {",
									"                            \"createdAt\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"updatedAt\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"barcode\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"qrCode\": {",
									"                                \"type\": \"string\"",
									"                            }",
									"                        },",
									"                        \"required\": [",
									"                            \"createdAt\",",
									"                            \"updatedAt\",",
									"                            \"barcode\",",
									"                            \"qrCode\"",
									"                        ],",
									"                        \"additionalProperties\": false",
									"                    },",
									"                    \"images\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {",
									"                            \"type\": \"string\"",
									"                        }",
									"                    },",
									"                    \"thumbnail\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                },",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"title\",",
									"                    \"description\",",
									"                    \"category\",",
									"                    \"price\",",
									"                    \"discountPercentage\",",
									"                    \"rating\",",
									"                    \"stock\",",
									"                    \"tags\",",
									"                    \"sku\",",
									"                    \"weight\",",
									"                    \"dimensions\",",
									"                    \"warrantyInformation\",",
									"                    \"shippingInformation\",",
									"                    \"availabilityStatus\",",
									"                    \"reviews\",",
									"                    \"returnPolicy\",",
									"                    \"minimumOrderQuantity\",",
									"                    \"meta\",",
									"                    \"images\",",
									"                    \"thumbnail\"",
									"                ],",
									"                \"additionalProperties\": false",
									"            }",
									"        },",
									"        \"total\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"skip\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"limit\": {",
									"            \"type\": \"number\"",
									"        }",
									"    },",
									"    \"required\": [",
									"        \"products\",",
									"        \"total\",",
									"        \"skip\",",
									"        \"limit\"",
									"    ],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.test(\"Validate JSON response by schema\", () => {",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"",
									"    const Ajv = require('ajv');",
									"    const ajv = new Ajv();",
									"    const validate = ajv.compile(expectedSchema);",
									"    const valid = validate(responseContent);",
									"    pm.expect(valid, ajv.errorsText(validate.errors)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/products/search?q={{randomisedSearchKeyword}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "{{randomisedSearchKeyword}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"const expectedSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"price\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"discountPercentage\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"stock\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"rating\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"images\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"thumbnail\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"description\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"brand\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [",
									"        \"id\",",
									"        \"title\",",
									"        \"price\",",
									"        \"discountPercentage\",",
									"        \"stock\",",
									"        \"rating\",",
									"        \"images\",",
									"        \"thumbnail\",",
									"        \"description\",",
									"        \"category\"",
									"    ],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.test(\"The product ID has been changed\", () => {",
									"    const requestContent = pm.request.body.toJSON();",
									"",
									"    const originalId = requestContent.id;",
									"    const newId = responseContent.id;",
									"",
									"    pm.expect(newId).to.not.equal(originalId);",
									"});",
									"",
									"pm.test(\"Validate JSON response by schema\", () => {",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"",
									"    const Ajv = require('ajv');",
									"    const ajv = new Ajv();",
									"    const validate = ajv.compile(expectedSchema);",
									"    const valid = validate(responseContent);",
									"    pm.expect(valid, ajv.errorsText(validate.errors)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 15,\n    \"title\": \"Wooden Bathroom Sink With Mirror\",\n    \"description\": \"The Wooden Bathroom Sink with Mirror is a unique and stylish addition to your bathroom, featuring a wooden sink countertop and a matching mirror.\",\n    \"category\": \"furniture\",\n    \"price\": 799.99,\n    \"discountPercentage\": 8.8,\n    \"rating\": 3.59,\n    \"stock\": 7,\n    \"tags\": [\n        \"furniture\",\n        \"bathroom\"\n    ],\n    \"brand\": \"Bath Trends\",\n    \"sku\": \"FUR-BAT-WOO-015\",\n    \"weight\": 10,\n    \"dimensions\": {\n        \"width\": 7.98,\n        \"height\": 8.88,\n        \"depth\": 28.46\n    },\n    \"warrantyInformation\": \"3 year warranty\",\n    \"shippingInformation\": \"Ships in 3-5 business days\",\n    \"availabilityStatus\": \"Low Stock\",\n    \"reviews\": [\n        {\n            \"rating\": 4,\n            \"comment\": \"Fast shipping!\",\n            \"date\": \"2025-04-30T09:41:02.053Z\",\n            \"reviewerName\": \"Logan Torres\",\n            \"reviewerEmail\": \"logan.torres@x.dummyjson.com\"\n        },\n        {\n            \"rating\": 5,\n            \"comment\": \"Very pleased!\",\n            \"date\": \"2025-04-30T09:41:02.053Z\",\n            \"reviewerName\": \"Aria Parker\",\n            \"reviewerEmail\": \"aria.parker@x.dummyjson.com\"\n        },\n        {\n            \"rating\": 3,\n            \"comment\": \"Poor quality!\",\n            \"date\": \"2025-04-30T09:41:02.053Z\",\n            \"reviewerName\": \"Dylan Wells\",\n            \"reviewerEmail\": \"dylan.wells@x.dummyjson.com\"\n        }\n    ],\n    \"returnPolicy\": \"60 days return policy\",\n    \"minimumOrderQuantity\": 2,\n    \"meta\": {\n        \"createdAt\": \"2025-04-30T09:41:02.053Z\",\n        \"updatedAt\": \"2025-04-30T09:41:02.053Z\",\n        \"barcode\": \"1958104402873\",\n        \"qrCode\": \"https://cdn.dummyjson.com/public/qr-code.png\"\n    },\n    \"images\": [\n        \"https://cdn.dummyjson.com/product-images/furniture/wooden-bathroom-sink-with-mirror/1.webp\",\n        \"https://cdn.dummyjson.com/product-images/furniture/wooden-bathroom-sink-with-mirror/2.webp\",\n        \"https://cdn.dummyjson.com/product-images/furniture/wooden-bathroom-sink-with-mirror/3.webp\"\n    ],\n    \"thumbnail\": \"https://cdn.dummyjson.com/product-images/furniture/wooden-bathroom-sink-with-mirror/thumbnail.webp\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/products/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"const expectedSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"price\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"discountPercentage\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"stock\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"rating\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"images\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"thumbnail\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"description\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"brand\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [",
									"        \"id\",",
									"        \"title\",",
									"        \"price\",",
									"        \"discountPercentage\",",
									"        \"stock\",",
									"        \"rating\",",
									"        \"images\",",
									"        \"thumbnail\",",
									"        \"description\",",
									"        \"category\"",
									"    ],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.test(\"Validate JSON response by schema\", () => {",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"",
									"    const Ajv = require('ajv');",
									"    const ajv = new Ajv();",
									"    const validate = ajv.compile(expectedSchema);",
									"    const valid = validate(responseContent);",
									"    pm.expect(valid, ajv.errorsText(validate.errors)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Changed value\",\n    \"price\": 999.99,\n    \"discountPercentage\": 5.55,\n    \"stock\": 999,\n    \"rating\": 4.7,\n    \"images\": [\n        \"https://cdn.dummyjson.com/product-images/groceries/fish-steak/1.webp\"\n    ],\n    \"thumbnail\": \"https://cdn.dummyjson.com/product-images/groceries/fish-steak/thumbnail.webp\",\n    \"description\": \"Quality fish steak, suitable for grilling, baking, or pan-searing.\",\n    \"category\": \"groceries\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/products/{{randomisedProductId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"{{randomisedProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseContent = pm.response.json();",
									"",
									"const expectedSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"description\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"price\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"discountPercentage\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"rating\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"stock\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"tags\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"brand\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"sku\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"weight\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"dimensions\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"width\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"height\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"depth\": {",
									"                    \"type\": \"number\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"width\",",
									"                \"height\",",
									"                \"depth\"",
									"            ],",
									"            \"additionalProperties\": false",
									"        },",
									"        \"warrantyInformation\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"shippingInformation\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"availabilityStatus\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"reviews\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"rating\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"comment\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"date\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"reviewerName\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"reviewerEmail\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                },",
									"                \"required\": [",
									"                    \"rating\",",
									"                    \"comment\",",
									"                    \"date\",",
									"                    \"reviewerName\",",
									"                    \"reviewerEmail\"",
									"                ],",
									"                \"additionalProperties\": false",
									"            }",
									"        },",
									"        \"returnPolicy\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"minimumOrderQuantity\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"createdAt\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"barcode\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"qrCode\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"createdAt\",",
									"                \"updatedAt\",",
									"                \"barcode\",",
									"                \"qrCode\"",
									"            ],",
									"            \"additionalProperties\": false",
									"        },",
									"        \"images\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"thumbnail\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"isDeleted\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"deletedOn\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [",
									"        \"id\",",
									"        \"title\",",
									"        \"description\",",
									"        \"category\",",
									"        \"price\",",
									"        \"discountPercentage\",",
									"        \"rating\",",
									"        \"stock\",",
									"        \"tags\",",
									"        \"sku\",",
									"        \"weight\",",
									"        \"dimensions\",",
									"        \"warrantyInformation\",",
									"        \"shippingInformation\",",
									"        \"availabilityStatus\",",
									"        \"reviews\",",
									"        \"returnPolicy\",",
									"        \"minimumOrderQuantity\",",
									"        \"meta\",",
									"        \"images\",",
									"        \"thumbnail\",",
									"        \"isDeleted\",",
									"        \"deletedOn\"",
									"    ],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.test(\"Response has isDeleted and deletedDate flags\", function () {",
									"    pm.expect(responseContent).to.have.property(\"isDeleted\");",
									"    pm.expect(responseContent).to.have.property(\"deletedOn\");",
									"});",
									"",
									"pm.test(\"Validate JSON response by schema\", () => {",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"",
									"    const Ajv = require('ajv');",
									"    const ajv = new Ajv();",
									"    const validate = ajv.compile(expectedSchema);",
									"    const valid = validate(responseContent);",
									"    pm.expect(valid, ajv.errorsText(validate.errors)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"phoneDani HEHE\",\n  \"price\": 65000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/products/{{randomisedProductId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"{{randomisedProductId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// This codeblock is for generating random product id for the products and assign it to a folder level variable",
							"const maximumNumberOfProducts = 30;",
							"const randomisedProductId = Math.floor(Math.random() * maximumNumberOfProducts) + 1;",
							"pm.variables.set(\"randomisedProductId\", randomisedProductId);",
							"console.log(`INFO LEVEL: The randomised product id is ${randomisedProductId}.`);",
							"",
							"// This codeblock is for generating random product category and assign it to a folder level variable",
							"const productCategoryPool = [",
							"    \"laptops\",",
							"    \"mens-shirts\",",
							"    \"mens-shoes\",",
							"    \"mens-watches\",",
							"];",
							"const randomisedProductCategoryName = productCategoryPool[Math.floor(Math.random() * productCategoryPool.length)];",
							"pm.variables.set(\"randomisedProductCategoryName\", randomisedProductCategoryName);",
							"console.log(`INFO LEVEL: The randomised product category is ${randomisedProductCategoryName}.`);",
							"",
							"// This codeblock is for generating random search keyword and assign it to a folder level variable",
							"const searchKeywordPool = [",
							"    \"Phone\",",
							"    \"Mascara\",",
							"    \"Nail\",",
							"    \"Coco\"",
							"];",
							"const randomisedSearchKeyword = searchKeywordPool[Math.floor(Math.random() * searchKeywordPool.length)];",
							"pm.variables.set(\"randomisedSearchKeyword\", randomisedSearchKeyword);",
							"console.log(`INFO LEVEL: The randomised search keyword is ${randomisedSearchKeyword}.`);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Carts v1",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"const responseTimeThreshold = Number(pm.collectionVariables.get(\"responseTimeThreshold\"));",
					"",
					"pm.test(\"Status code check\", () => {",
					"    switch (pm.request.method) {",
					"        case \"GET\":",
					"            pm.expect([200, 201]).to.include(pm.response.code);",
					"            break;",
					"        case \"POST\":",
					"            pm.expect([200, 201]).to.include(pm.response.code);",
					"            break;",
					"        case \"PATCH\":",
					"            pm.expect([200, 201]).to.include(pm.response.code);",
					"            break;",
					"        case \"PUT\":",
					"            pm.expect([200, 201]).to.include(pm.response.code);",
					"            break;",
					"        case \"DELETE\":",
					"            pm.expect([200, 204]).to.include(pm.response.code);",
					"            break;",
					"        default:",
					"            console.warn(`⚠️ No status code rule defined for method: ${pm.request.method}`);",
					"    }",
					"});",
					"",
					"pm.test(\"Response time is under the threshold\", () => {",
					"    pm.expect(pm.response.responseTime).to.be.below(responseTimeThreshold);",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "responseTimeThreshold",
			"value": "700"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		}
	]
}